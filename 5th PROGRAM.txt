import pandas as pd
import matplotlib.pyplot as plt
import numpy as  np
from sklearn.linear_model import LinearRegression
from sklearn import linear_model
from sklearn.metrics import mean_squared_error,mean_absolute_error
df=pd.read_csv('/content/boston_housing.csv')
print(df)

df.info()
print(df.isnull().sum())
print(df.head())

plt.scatter(df.Built_up_area,df.Rent,color='red',marker='*')
plt.xlabel('Builit_up_area')
plt.ylabel('Rent')
plt.title('scatter plot')
plt.show()

x=df.drop('Rent',axis=1)
print(x)
y=df.Rent
print(y)

from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.33,random_state=42)
print('xtrain shape:',xtrain.shape)
print('xtest shape:',xtest.shape)
print('ytrain shape:',ytrain.shape)
print('ytest shape:',ytest.shape)

reg=linear_model.LinearRegression()
reg.fit(x,y)
y_pred=reg.predict(xtest)
reg.predict([[650,0,1]])
print(reg.coef_)
print(reg.intercept_)

z=9.7900215*650+1128.879253617697
print(z)

train_score=reg.score(xtrain,ytrain)
test_score=reg.score(xtest,ytest)
print('train score(r-squared):',train_score)
print('test score(r-squared):',test_score)

mse=mean_squared_error(ytest,y_pred)
print('mean squared error:',mse)
mae=mean_absolute_error(ytest,y_pred)
print('mean absolute error:',mae)